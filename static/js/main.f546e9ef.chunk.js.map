{"version":3,"sources":["serviceWorker.js","Card.js","CardList.js","dev.js","SearchBox.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","dev","map","user","i","src_Card_0","key","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","particlesOptions","particles","number","value","density","enable","value_are","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","state","_this2","filteredDev","filter","toLowerCase","includes","src_SearchBox","src_CardList","particles_default","params","role","aria-label","Component","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wGCFSC,SAbF,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,GAC5B,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,YAAYC,IAAG,wBAAAC,OAA0BP,EAA1B,cAE3BC,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,OCUOS,EAjBE,SAAAX,GAAW,IAATY,EAASZ,EAATY,IAClB,OACER,EAAAC,EAAAC,cAAA,WACEM,EAAIC,IAAI,SAACC,EAAKC,GAChB,OACAX,EAAAC,EAAAC,cAACU,EAAD,CACAC,IAAKF,EACLZ,GAAIS,EAAIG,GAAGZ,GACXF,KAAMW,EAAIG,GAAGd,KACbC,MAAOU,EAAIG,GAAGb,YCZJU,EAAM,CACjB,CACET,GAAI,EACJF,KAAM,mBACNiB,SAAU,cACVhB,MAAO,6BAET,CACEC,GAAI,EACJF,KAAM,eACNiB,SAAU,YACVhB,MAAO,qBAET,CACEC,GAAI,EACJF,KAAM,mBACNiB,SAAU,WACVhB,MAAO,sBAET,CACEC,GAAI,EACJF,KAAM,mBACNiB,SAAU,WACVhB,MAAO,6BAET,CACEC,GAAI,EACJF,KAAM,mBACNiB,SAAU,SACVhB,MAAO,4BAET,CACEC,GAAI,EACJF,KAAM,uBACNiB,SAAU,mBACVhB,MAAO,2BAET,CACEC,GAAI,EACJF,KAAM,kBACNiB,SAAU,eACVhB,MAAO,0BAET,CACEC,GAAI,EACJF,KAAM,2BACNiB,SAAU,gBACVhB,MAAO,wBAET,CACEC,GAAI,EACJF,KAAM,kBACNiB,SAAU,WACVhB,MAAO,2BAET,CACEC,GAAI,GACJF,KAAM,qBACNiB,SAAU,iBACVhB,MAAO,2BChDIiB,EAVG,SAAAnB,GAAiCA,EAA/BoB,YAA+B,IAAlBC,EAAkBrB,EAAlBqB,aAChC,OACCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uCACjBe,KAAK,SAASC,YAAY,SAC1BC,SAAUH,sBCCNI,SAAmB,CACLC,UAAW,CAChBC,OAAQ,CACPC,MAAO,GACPC,QAAS,CACRC,QAAQ,EACRC,UAAW,SAmCbC,cA7Bd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAODI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAAEtB,YAAaqB,EAAME,OAAOf,SAP1CK,EAAKW,MAAQ,CACZhC,IAAKA,EACLQ,YAAa,IAJDa,wEAWJ,IAAAY,EAAAT,KACHU,EAAaV,KAAKQ,MAAMhC,IAAImC,OAAO,SAAAnC,GACxC,OAAOA,EAAIX,KAAK+C,cAAcC,SAASJ,EAAKD,MAAMxB,YAAY4B,iBAE/D,OACA5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACTH,EAAAC,EAAAC,cAAA,4BACNF,EAAAC,EAAAC,cAAC4C,EAAD,CAAW7B,aAAce,KAAKI,iBAC9BpC,EAAAC,EAAAC,cAAC6C,EAAD,CAAUvC,IAAKkC,IACf1C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAWE,UAAU,YACP8C,OAAQ5B,IAEhBrB,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,QAAMgD,KAAK,MAAMC,aAAW,QAA5B,gBAAd,gCAxBUC,aCXlBC,IAASC,OACLtD,EAAAC,EAAAC,cAACqD,EAAD,MACDC,SAASC,eAAe,SNwHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f546e9ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className='bg-black dib br4 pa3 ma2 o-70 grow'>\r\n\t\t\t<div className='washed-blue'>\r\n\t\t\t    <img alt=\"Developer\" src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t    \r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t); \r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport  Card from './Card';\r\n\r\nconst CardList = ({dev}) => {\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{dev.map((user,i) => {\r\n\t\t\treturn (\r\n\t\t\t<Card \r\n\t\t\tkey={i} \r\n\t\t\tid={dev[i].id} \r\n\t\t\tname={dev[i].name} \r\n\t\t\temail={dev[i].email}\r\n\t\t\t/>\r\n\t\t);\r\n\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CardList;","export const dev = [\r\n  {\r\n    id: 1,\r\n    name: 'Pranshu Kumbhare',\r\n    username: 'pranshu2610',\r\n    email: 'kumbharepranshu@gmail.com'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  }\r\n];\r\n","import React from 'react';\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input className='pa3 w-third ba bw2 br3 b--white o-50' \r\n\t\ttype='search' placeholder='Search'\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\nimport {dev} from './dev';\r\nimport SearchBox from './SearchBox';\r\nimport Particles from 'react-particles-js';\r\nimport './App.css';\r\n\r\nconst particlesOptions = {\r\n                    particles: {\r\n            \t\t\tnumber: {\r\n            \t\t\t\tvalue: 90,\r\n            \t\t\t\tdensity: {\r\n            \t\t\t\t\tenable: true,\r\n            \t\t\t\t\tvalue_are: 800\r\n            \t\t\t\t}\r\n            \t\t\t}\r\n            \t\t}\r\n            \t}\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tdev: dev,\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t}\r\n\trender () {\r\n\t\tconst filteredDev= this.state.dev.filter(dev =>{\r\n\t\t\treturn dev.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn (\r\n\t\t<div className='tc'>\r\n        <h1>Developer Team</h1>\r\n\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t<CardList dev={filteredDev}/>\r\n\t\t<Particles className='particles'\r\n                params={particlesOptions}\r\n        />\r\n        <h4>Made with <span role=\"img\" aria-label=\"Love\">❤️</span> by Pranshu Kumbhare</h4>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './App'\n\nReactDOM.render(\n\t\t\t\t<App/>\n\t, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}